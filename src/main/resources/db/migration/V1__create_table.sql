-- Bảng USERS
CREATE TABLE users (
                       id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       full_name NVARCHAR2(100),
                       dob DATE,
                       email NVARCHAR2(100) NOT NULL UNIQUE,
                       phone NVARCHAR2(11) NOT NULL UNIQUE,
                       password NVARCHAR2(1000) NOT NULL,
                       role NVARCHAR2(20) DEFAULT 'USER'
        CONSTRAINT chk_role_user CHECK (role IN ('USER', 'ADMIN')),
                       status NVARCHAR2(20) DEFAULT 'ACTIVE'
        CONSTRAINT chk_status_user CHECK (status IN ('ACTIVE', 'INACTIVE'))
);

-- Bảng ACCOUNTS
CREATE TABLE accounts (
                          id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          balance NUMBER DEFAULT 0,
                          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                          type NVARCHAR2(20)
        CONSTRAINT chk_type_account CHECK (type IN ('CREDIT', 'DEBIT', 'SAVINGS')),
                          status NVARCHAR2(20) DEFAULT 'UNLOCK'
        CONSTRAINT chk_status_account CHECK (status IN ('UNLOCK', 'LOCK')),
                          owner_id INT NOT NULL,
                          CONSTRAINT fk_owner_account FOREIGN KEY (owner_id) REFERENCES users(id)
);

-- Bảng TRANSACTIONS
CREATE TABLE transactions (
                              id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              from_account_id INT NOT NULL,
                              to_account_id INT NOT NULL,
                              amount NUMBER NOT NULL,
                              message NVARCHAR2(2000),
                              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                              status NVARCHAR2(20)
        CONSTRAINT chk_status_transaction CHECK (status IN ('FAILED', 'SUCCESSFUL', 'WAIT')),
                              CONSTRAINT fk_from_transaction FOREIGN KEY (from_account_id) REFERENCES accounts(id),
                              CONSTRAINT fk_to_transaction FOREIGN KEY (to_account_id) REFERENCES accounts(id)
);

-- Bảng LOANS
CREATE TABLE loans (
                       id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       amount NUMBER,
                       interest_rate NUMBER(5,2)
        CONSTRAINT chk_rate CHECK (interest_rate BETWEEN 0 AND 1),
                       created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                       duration_months INT,
                       status NVARCHAR2(20)
        CONSTRAINT chk_status_loans CHECK (status IN ('PENDING', 'APPROVED', 'ACTIVE', 'OVERDUE', 'CLOSED')),
                       borrower_id INT NOT NULL,
                       approver_id INT NOT NULL,
                       CONSTRAINT fk_borrower_loan FOREIGN KEY (borrower_id) REFERENCES users(id),
                       CONSTRAINT fk_approver_loan FOREIGN KEY (approver_id) REFERENCES users(id)
);

-- Bảng LOAN_PAYMENT
CREATE TABLE loan_payment (
                              id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              loan_id INT NOT NULL,
                              payment_date DATE DEFAULT CURRENT_DATE,
                              amount NUMBER NOT NULL,
                              status NVARCHAR2(20)
        CONSTRAINT chk_status_loanpayment CHECK (status IN ('PENDING', 'SUCCESSFUL', 'FAILED')),
                              CONSTRAINT fk_loan_payment FOREIGN KEY (loan_id) REFERENCES loans(id)
);

-- Bảng NOTIFICATION
CREATE TABLE notification (
                              id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              title NVARCHAR2(255),
                              brief NVARCHAR2(1000),
                              message NVARCHAR2(2000),
                              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                              status NVARCHAR2(20) DEFAULT 'UNREAD'
        CONSTRAINT chk_status_notification CHECK (status IN ('UNREAD', 'READ')),
                              user_id INT NOT NULL,
                              CONSTRAINT fk_user_notification FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Bảng OTP
CREATE TABLE otp (
                     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                     code VARCHAR2(6) NOT NULL,
                     email NVARCHAR2(100) NOT NULL,
                     expired_at TIMESTAMP NOT NULL,
                     type NVARCHAR2(100)
        CONSTRAINT chk_type_otp CHECK (type IN ('VERIFY', 'FORGOT')),
                     status NVARCHAR2(20) DEFAULT 'PENDING'
        CONSTRAINT chk_status_otp CHECK (status IN ('PENDING', 'EXPIRED', 'USED', 'INVALID', 'CANCELLED')),
                     CONSTRAINT fk_email_otp FOREIGN KEY (email) REFERENCES users(email)
);
