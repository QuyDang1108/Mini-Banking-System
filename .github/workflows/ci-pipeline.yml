name: CI - Maven build & Quality

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read
  packages: read
  issues: write
  pull-requests: write

env:
  RUN_TESTS: true

jobs:
  style:
    name: Check style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Run Checkstyle
        run: mvn -B checkstyle:checkstyle

  gitleaks:
    name: Gitleaks check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        run: |
          docker pull zricethezav/gitleaks:v8.18.4
          docker run --rm -v ${{ github.workspace }}:/work -w /work \
            zricethezav/gitleaks:v8.18.4 detect --source="." --config="/work/gitleaks.toml" --verbose --no-git

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: [ style ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build and run tests
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            mvn -B clean verify jacoco:report
          else
            mvn -B clean package -DskipTests
          fi

      - name: Archive test results
        if: always() && env.RUN_TESTS == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tests-report
          path: target/**/surefire-reports

      - name: Upload JaCoCo report
        if: success() && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/jacoco.xml

      - name: Upload JAR artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-package
          path: target/*.jar

  analyze:
    name: Coverage & SonarCloud
    runs-on: ubuntu-latest
    needs: [ build-test ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Verify coverage ≥ 70% and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=QuyDang1108_Mini-Banking-System \
            -Dsonar.organization=quydang1108 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          
          echo "Checking coverage threshold..."
          python3 - <<'EOF'
          import xml.etree.ElementTree as ET
          tree = ET.parse('target/site/jacoco/jacoco.xml')
          instr = next(c for c in tree.iter('counter') if c.attrib['type'] == 'INSTRUCTION')
          covered, missed = int(instr.attrib['covered']), int(instr.attrib['missed'])
          total = covered + missed
          percent = 100 * covered / total if total else 0
          print(f"Coverage: {percent:.2f}%")
          if percent < 70:
              print("❌ Coverage below threshold (70%)")
              exit(1)
          print("✅ Coverage OK")
          EOF
